#======================================#
# OmniPhotos Preprocessing Tool Config #
#======================================#
# There are 4 preprocessing steps:
# 0) loading the configuration from this YAML file (always run);
# 1) extracting and preprocessing video frames;
# 2) reconstructing the camera trajectory;
# 3) finding the optimal circle and generating a config file for OmniPhotos;
# 4) computing optical flow for the input images (only if using FlowNet).


#### Global Config ################################################################################
# Note that all paths are relative to the directory this config file is in.

# The first preprocessing step to be executed.
preprocessing.step_start: 2

# The last preprocessing step to be executed. Use -1 to execute all steps.
preprocessing.step_end: 3

# Type of input to be processed: "video" or "image" (sequence).
preprocessing.input_type: video

# If "input_type" is "video", this is the path to the video file.
# If "input_type" is "image", this is the path to the "Input" directory.
preprocessing.input_path: VID_20190614_125313_00_059-flowstate.mp4

# Naming scheme for extracted images to be stored in the Input directory for OmniPhotos.
preprocessing.original_filename_expression: image-%04d.jpg

# Rotation (in degrees) to be applied to the input images before writing to the "Input" directory.
# Convention: [azimuth angle, elevation angle]
preprocessing.image_rotation: [0.0, 0.0]

# The first frame to be used for reconstruction (inclusive).
preprocessing.frame_index_start: 0

# The last frame to be used for reconstruction (inclusive). The very last frame of the video is -1.
preprocessing.frame_index_end: -1

# Using the automatic circle selector to find the optimal circle in the camera path.
# This will override frame_index_start and frame_index_end and extract all video frames.
preprocessing.find_stable_circle: True

# Maximum number of frames in the final output. Extract all frames with -1.
preprocessing.frame_fixed_number: 200

# Camera pose reconstruction tools: "openvslam", "colmap" or "all".
preprocessing.trajectory_tool: openvslam


#### OpenVSLAM ####################################################################################
# Default input directory : where the rotated images are stored
# Default output directory: /Capture/openvslam

# Path to OpenVSLAM executable.
preprocessing.openvslam.execution_file_path: ../openvslam/run_camera_pose_reconstruction.exe

# Passes for point cloud reconstruction and subsequent tracking.
preprocessing.openvslam.mapping_repeat_times: 3

# Path to vocabulary file.
preprocessing.openvslam.dbow2_file_path: ../openvslam/openvslam-win32-x64-bin-dd8af1c-vocab/orb_vocab/orb_vocab.dbow2


#### COLMAP #######################################################################################
# Default input directory : where the rotated images are stored
# Default output directory: /Capture/COLMAP

# Path to COLMAP executable.
preprocessing.colmap.execution_file_path: D:/utilities/COLMAP/COLMAP-3.6-dev.3-windows/COLMAP.bat

# Camera type: "panoramic" extracts a perspective view; "perspective" uses images as is.
preprocessing.colmap.input_camera_type: panoramic

# Viewing direction of perspective view within panoramic input [phi, theta]. Forward is [0.0, 0.0].
preprocessing.colmap.perspective_forward: [0.0, 0.0]

# Frame step size for sparse reconstruction (first step of 2-step reconstruction).
preprocessing.colmap.frame_interval: 5

# Vertical field of view of extracted perspective image (if input_camera_type is panoramic).
preprocessing.colmap.perspective_fov_vertical: 120.0

# Height (in pixels) of extracted perspective image.
preprocessing.colmap.perspective_resolution_height: 1200

# Width (in pixels) of extracted perspective image.
preprocessing.colmap.perspective_resolution_width: 1200

# Path to vocabulary file.
preprocessing.colmap.vocab_file_path: D:/utilities/COLMAP/COLMAP_vocabulary_trees/vocab_tree_flickr100K_words1M.bin


#### OmniPhotos binary preprocessing ##############################################################

# Path to OmniPhotos preprocessing executable.
preprocessing.omniphotos.execution_file_path: ../omniphotos/Preprocessing.exe

# Override the name of the OmniPhotos preprocessing configuration file.
preprocessing.omniphotos.yaml_config_path: None

# Optional downscaling of input images. Do not downsample if set to [-1.0, -1.0].
preprocessing.omniphotos.downsample_scalar: [-1.0, -1.0]

# Radius (in metres) of the camera circle path.
preprocessing.omniphotos.circle_radius: 1.0

# Override the name of the cache directory. If not set, the name will auto-generated
# based on the input resolution info and the used optical flow method.
#preprocessing.cache_folder_name: "cache_xxx"

# (Obsolete) Enable stabilisation.
preprocessing.omniphotos.stable_enable: False


#### Additional Optical Flow ######################################################################

# Flow method. Only "flownet2" is supported.
preprocessing.of.method: flownet2

# Save a visualisation of the estimated optical flow.
preprocessing.of.save_visualization: True

# Downscale images for computing optical flow. Do not downsample if set to [-1.0, -1.0].
preprocessing.of.downsample_scalar: [0.5, 0.5]

## Options for Flownet2
# GPU to be used. -1 is the default GPU.
preprocessing.of.flownet2.device_idx: -1

# FlowNet2 model name: "FlowNet2", "FlowNet2C", "FlowNet2S", "FlowNet2SD", "FlowNet2CS", "FlowNet2CSS"
preprocessing.of.flownet2.model_name: FlowNet2

# FlowNet2 model file path
preprocessing.of.flownet2.model_path: D:/sourcecode/flownet2pytorch/models/FlowNet2_checkpoint.pth.tar
