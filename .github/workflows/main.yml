# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
########################### OPENCV ##############################
# This works!
#       -
#         name: Choco install opencv
#         uses: crazy-max/ghaction-chocolatey@v1
#         with:
#           args: install opencv --yes #--execution-timeout=30
################################################################
      # Runs a set of commands using the runners shell
      - name: Clone eigen
        run: git clone https://gitlab.com/libeigen/eigen.git
      
      - name: Clone GLFW
        run: |
          git clone https://github.com/glfw/glfw.git
          cd glfw
          git fetch --all --tags
          git checkout 3.3.2

      - name: build GLFW
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          cmake -E make_directory ${{github.workspace}}/build
          cmake -S . -B build -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install-glfw -DBUILD_SHARED_LIBS=TRUE
          cmake --build build --target INSTALL

